name: Docker Build and Push

on:
  push:
    branches:
      - 'release_*'
      - 'master'

  workflow_dispatch:
jobs:
  notification_job:
    name: Notify Build Status
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: commit,ref,workflow,eventName
          author_name: ${{ github.actor }}
          icon_emoji: ':robot_face:'
          username: "Feature Branch Build Status"
          text: |
            ${{ env.WORKFLOW_CONCLUSION }}:
            https://github.com/n8ebel/GitHubActionsAutomationSandbox/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
#  build:
#    runs-on: ubuntu-latest
#    env:
#      REPOSITORY_URL: docker.pkg.github.com
#      IMAGE_NAME: ${{ github.repository }}/alerta-cli
#      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#    steps:
#      - uses: act10ns/slack@v1
#        with:
#          status: starting
#          channel: '#workflows'
#          message: Starting Docker Build and Push...
#        if: always()
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Variables
#        id: vars
#        run: echo "::set-output name=SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
#      - name: Build image
#        id: docker-build
#        run: >-
#          docker build
#          -t $IMAGE_NAME
#          -t $REPOSITORY_URL/$IMAGE_NAME:${{ steps.vars.outputs.SHORT_COMMIT_ID }}
#          -t $REPOSITORY_URL/$IMAGE_NAME:latest .
#      - name: Docker Login
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
#        run: docker login $REPOSITORY_URL --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD"
#      - name: Publish Image
#        id: docker-push
#        run: docker push $REPOSITORY_URL/$IMAGE_NAME
#
#      - uses: act10ns/slack@v1
#        with:
#          status: ${{ job.status }}
#          steps: ${{ toJson(steps) }}
#          channel: '#workflows'
#        if: always()