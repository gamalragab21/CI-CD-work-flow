#name: Android Build and Deployment Pipeline
#
on:
  push:
    branches:
      - 'release_*'
      - 'master'


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit tests:
    stage: test
    script:
      - ./gradlew testDebugUnitTest
    artifacts:
      when: always
      reports:
        junit: [
          ./**/build/test-results/testDebugUnitTest/TEST-*.xml,
        ]

  instrumented tests:
    stage: test
    script:

      # install packages needed by emulator
      - apt-get install libx11-dev libpulse0 libgl1 libnss3 libxcomposite-dev libxcursor1 libasound2 --yes

      # install android sdk components and emulator
      - sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "emulator" "system-images;android-${EMULATOR_IMAGE};default;armeabi-v7a"

      # download script for emulator waiting
      - wget --quiet --output-document=android-wait-for-emulator https://raw.githubusercontent.com/travis-ci/travis-cookbooks/0f497eb71291b52a703143c5cd63a217c8766dc9/community-cookbooks/android-sdk/files/default/android-wait-for-emulator
      - chmod +x android-wait-for-emulator

      # create virtual device named "test"
      - echo no | avdmanager -v create avd -n test -k "system-images;android-${EMULATOR_IMAGE};default;armeabi-v7a"

      # start adb server
      - adb start-server

